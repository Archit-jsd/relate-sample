title: "Linear Algebra"
description: |

    # Linear Algebra Quiz

    Yadda yadda.

sticky_versioning: false

access_rules:
 - id: standard
   roles: [student, ta, instructor]
   end: end_week 1
   allowed_session_count: 2
   permissions: [view, start_credit, see_correctness, change_answer]

 - id: grace50
   roles: [student, ta, instructor]
   start: start_week 2
   end: start_week 2
   credit_percent: 50
   permissions: [view, start_credit, see_correctness, change_answer]

 - id: review
   roles: [student, ta, instructor]
   start: start_week 3
   permissions: [view, start_no_credit, view_past, see_correctness, see_answer]

 - id: fallback
   permissions: []

grade_aggregation_strategy: max_grade

groups:
 - id: intro
   pages:

    -
        type: Page
        id: welcome
        title: "Linear algebra quiz"
        content: |

            # Welcome to the linear algebra quiz!

            Don't be scared.

 - id: quiz
   pages:

    -
        type: TextQuestion
        id: eigvec
        title: Eigenvectors
        value: 2
        prompt: |

            # What's an eigenvector?

            Yadda ___________________ yadda.

        answers:

          - <plain>matrix
          - <case_sens_plain>Eigenmatrix
          - <regex>(?:linear\s+)?\s*map
          - <case_sens_regex>(?:operator\s+)?\s*map

    -
        type: repo:simple_questions.MyTextQuestion
        id: eigval
        title: Eigenvalues
        prompt: |

            # Eigenvalues

            What's an eigenvalue?

        answers:

          - scalar
          - number

    -
        type: TextQuestion
        id: neumann
        title: Neumann series
        value: 5
        prompt: |

          # Neumann series

            What's $\operatorname{Id} + A + A^2 +A^3+\cdots$?

        answers:

          - <sym_expr>1/(1-A)

    -
        type: ChoiceQuestion
        id: lsq
        title: Least squares problems
        value: 1
        shuffle: True
        prompt: |

            # Least squares problems

            Let $m\ge n$ and $\boldsymbol A$ be an $m\times n$ matrix. Which of the
            following conditions suffices to guarantee that
            the least squares system $\boldsymbol A \boldsymbol x\cong \boldsymbol b$
            has a *unique* solution?

        choices:

          - Always
          - When $\operatorname{rank}(\boldsymbol A)=m$
          - ~CORRECT~ When $\operatorname{rank}(\boldsymbol A)=n$
          - When $\boldsymbol b$ lies in $\operatorname{span}(\boldsymbol A)$
          - This is a really long option, but *certainly* not the correct one.

            Instead, it tests whether Markdown works in choice questions.

    -
        type: ChoiceQuestion
        id: krylov
        title: Krylov-space methods
        value: 2
        prompt: |

            # Krylov-space methods

            What form of a matrix is produced by Arnoldi iteration?

        choices:

          - ~CORRECT~ Upper Hessenberg form
          - Diagonal
          - Schur form
          - Tridiagonal form

    -
        type: PythonCodeQuestion
        id: addition
        title: Adding two numbers in Python
        value: 1
        timeout: 0.5
        prompt: |

            # Adding two numbers in Python

            Your code will receive two variables, *a* and *b*. Compute their sum and
            assign it to *c*.

        setup_code: |
            import random

            a = random.uniform(-10, 10)
            b = random.uniform(-10, 10)

        names_for_user: [a, b]

        names_from_user: [c]

        test_code: |
            if not isinstance(c, float):
                feedback.finish(0, "Your computed c is not a float.")

            correct_c = a + b
            rel_err = abs(correct_c-c)/abs(correct_c)

            if rel_err < 1e-7:
                feedback.finish(1, "Your computed c was correct.")
            else:
                feedback.finish(0, "Your computed c was incorrect.")

        correct_code: |

            c = a + b

    -
        type: PythonCodeQuestionWithHumanTextFeedback
        id: pymult
        title: Multiplying two numbers in Python
        value: 3
        human_feedback_value: 2
        timeout: 0.5
        data_files:
            - "question-data/random-data.npy"

        prompt: |

            # Multiplying two numbers in Python

            Your code will receive two variables, *a* and *b*. Compute their product and
            assign it to *c*.

        setup_code: |
            import random

            a = random.uniform(-10, 10)
            b = random.uniform(-10, 10)

            from io import BytesIO
            bio = BytesIO(data_files["question-data/random-data.npy"])

            import numpy as np
            data = np.load(bio)

        names_for_user: [a, b, data]

        names_from_user: [c]

        test_code: |
            if not isinstance(c, float):
                feedback.finish(0, "Your computed c is not a float.")

            correct_c = a * b
            rel_err = abs(correct_c-c)/abs(correct_c)

            if rel_err < 1e-7:
                feedback.finish(1, "Your computed c was correct.")
            else:
                feedback.finish(0, "Your computed c was incorrect.")

        correct_code: |

            c = a * b

        rubric: |

            The code has to be squeaky-clean.

        initial_code: |

            # Assign the product value to c.
            c = ...

    -
        type: FileUploadQuestion
        id: proof
        value: 5
        title: Pythagorean theorem
        maximum_megabytes: 0.5
        prompt: |

            # Pythagorean theorem

            Prove that $$\|a\|^2 +\|b\|^2=\|a + b\|^2$$ if $a\cdot b$ = 0.

            In the file upload box below, provide a PDF with your writeup.

        mime_types:

            - application/pdf

        rubric: |

            A full-credit solution needs to:

            * Use the inner product to make the argument (30%)
            * Be readable (30%)
            * Argue correctly (30%)
            * Contain no formal mistakes (10%)

    -
        type: HumanGradedTextQuestion
        id: hgtext
        value: 5
        widget: "editor:yaml"
        validators:

            -
                type: cfpage
                page_type: ChoiceQuestion

        prompt: |

            [JINJA]

            # Submit an exam question

            Submit your practice exam question in the box below.

            {% from "macros.jinja" import collapsible %}
            {% call collapsible("Instructions", id="instr") %}

            Use this pattern as a starting point:
            ```
            type: ChoiceQuestion
            id: myquestion
            shuffle: True
            prompt: |

                # What is your favorite number?

                There are many beautiful numbers. What's your
                favorite one?

            choices:

              - "1"
              - "2"
              - ~CORRECT~ 15
              - ~CORRECT~ $\pi$
              - $\sqrt 2$
            ```

            A few comments on how the questions are written:

            * You just need to change the `prompt` and the `choices`.
              Leave everything else as it is.
            * If you like, you can assign an `id`. This field must be all
              lower-case alphanumeric, no spaces. Underscores `_` are allowed.
            * Bare numbers as answer choices must be enclosed in quotes.
            * Mark the correct answer with a `~CORRECT~` tag.
            * Everything is formatted using [Markdown](https://guides.github.com/features/mastering-markdown/).
              You may use LaTeX math, enclosed in `$...$` for in-line math and
              `$$...$$` for display math.
            * Make sure to keep the indentation in place, otherwise the question
              won't be accepted by CourseFlow.
            * If you'd like to see what your question will look like, you can play with it
              [here](../../../sandbox/page/).

            You will receive the extra credit for your submitted question if we
            determine that you have done an 'honest job' trying to create a
            good exam question--basically if we can tell that you've put some
            work into your question.  For example, just copying and pasting a
            quiz question and changing the numbers slightly does not count. You
            can look for inspiration in the quizzes, though. Other sources of
            inspiration include the notes, the textbook and the
            demos--basically any fact that we've learned can be turned into a
            good question. Try to avoid True/False questions--those are very
            easy to guess and therefore not often good. Try to come up with
            good, confusing, plausible-sounding (but wrong) alternatives.

            {% endcall %}

            Please try to emphasize the part of the class that will be on the
            second midterm--that is to say, everything from orthogonality onward.

        rubric: |

            (None yet)

completion_text: |

    # See you in class!

    Thanks for completing the linear algebra quiz.
